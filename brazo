#include <Servo.h>

Servo pinza;  // Crear objeto para la pinza
Servo muneca; // Crear objeto para la muñeca
Servo hombro; // Crear objeto para el hombro
Servo codo;   // Crear objeto para el codo

const int pinzaPin = 9;
const int munecaPin = 10;
const int hombroPin = 11;
const int codoPin = 12;

const int joy1XPin = A0; // Eje X del primer joystick
const int joy1YPin = A1; // Eje Y del primer joystick
const int joy1ButtonPin = 2; // Botón del primer joystick

const int joy2XPin = A2; // Eje X del segundo joystick
const int joy2YPin = A3; // Eje Y del segundo joystick
const int joy2ButtonPin = 3; // Botón del segundo joystick

int joy1XValue = 0;
int joy1YValue = 0;
int joy1ButtonState = 0;

int joy2XValue = 0;
int joy2YValue = 0;
int joy2ButtonState = 0;

const int pinzaCerrada = 180; // Define el ángulo para la posición cerrada de la pinza

void setup() {
  Serial.begin(9600); // Inicializar comunicación serial para depuración
  pinza.attach(pinzaPin);
  muneca.attach(munecaPin);
  hombro.attach(hombroPin);
  codo.attach(codoPin);

  muneca.write(0); // Inicializar la muñeca en 0 grados

  pinMode(joy1ButtonPin, INPUT_PULLUP); // Configurar el botón del primer joystick como entrada con resistencia pull-up
  pinMode(joy2ButtonPin, INPUT_PULLUP); // Configurar el botón del segundo joystick como entrada con resistencia pull-up
}

void loop() {
  joy1XValue = analogRead(joy1XPin); // Leer el valor del eje X del primer joystick
  joy1YValue = analogRead(joy1YPin); // Leer el valor del eje Y del primer joystick
  joy1ButtonState = digitalRead(joy1ButtonPin); // Leer el estado del botón del primer joystick

  joy2XValue = analogRead(joy2XPin); // Leer el valor del eje X del segundo joystick
  joy2YValue = analogRead(joy2YPin); // Leer el valor del eje Y del segundo joystick
  joy2ButtonState = digitalRead(joy2ButtonPin); // Leer el estado del botón del segundo joystick

  // Mapear los valores del primer joystick a los ángulos del servo
  int pinzaAngle = map(joy1XValue, 0, 1023, 0, 180);
  int munecaAngle = map(joy1YValue, 0, 1023, 0, 120);

  // Mapear los valores del segundo joystick a los ángulos del servo
  int codoAngle = map(joy2YValue, 0, 1023, 0, 180);
  int hombroAngle = map(joy2XValue, 0, 1023, 0, 180); // Nuevo mapeo para el hombro

  // Controlar la pinza y la muñeca con el primer joystick
  pinza.write(pinzaAngle);
  muneca.write(munecaAngle);

  // Controlar el codo y el hombro con el segundo joystick
  codo.write(codoAngle);
  hombro.write(hombroAngle); // Controlar el hombro

  // Opcional: usar los botones de los joysticks para acciones adicionales
  if (joy1ButtonState == LOW) {
    pinza.write(pinzaCerrada); // Mover la pinza a 180 grados si el botón está presionado
    delay(55);
  } else {
    pinza.write(pinzaAngle); // Controlar la pinza con el joystick si el botón no está presionado
  }

  delay(15); // Pequeña pausa para estabilidad
}
